'use client';

import { useState, useMemo } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { FiCalendar, FiClock, FiTag, FiArrowRight, FiBookmark, FiSearch, FiX } from 'react-icons/fi';
import BlogSearch from '@/components/blog/BlogSearch';

type BlogPost = {
  id: number;
  title: string;
  excerpt: string;
  category: string;
  date: string;
  readTime: string;
  image: string;
  slug: string;
  tags?: string[];
  featured?: boolean;
};

const allPosts: BlogPost[] = [
  {
    id: 1,
    title: 'The Future of AI in Business: 2024 Predictions',
    excerpt: 'Explore how AI is set to transform business operations, customer experiences, and decision-making processes in the coming year with our comprehensive analysis.',
    category: 'AI Trends',
    date: '2024-08-15',
    readTime: '12 min read',
    image: '/images/blog/ai-business-future.jpg',
    slug: 'future-of-ai-in-business-2024',
    tags: ['AI', 'Business', 'Trends', '2024'],
    featured: true
  },
  // ... other posts ...
];

const CategoryBadge: React.FC<{ category: string }> = ({ category }) => (
  <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-800 dark:text-indigo-100">
    {category}
  </span>
);

const PostDate: React.FC<{ date: string }> = ({ date }) => {
  const formattedDate = new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
  });

  return (
    <div className="flex items-center text-sm text-gray-500 dark:text-gray-400">
      <FiCalendar className="mr-1.5 h-4 w-4 flex-shrink-0" />
      {formattedDate}
    </div>
  );
};

const ReadingTime: React.FC<{ minutes: string }> = ({ minutes }) => (
  <div className="flex items-center text-sm text-gray-500 dark:text-gray-400">
    <FiClock className="mr-1.5 h-4 w-4 flex-shrink-0" />
    {minutes}
  </div>
);

const PostTags = ({ tags, className = '' }: { tags?: string[]; className?: string }) => {
  if (!tags || tags.length === 0) return null;
  
  return (
    <div className={`flex flex-wrap gap-2 ${className}`}>
      {tags.map((tag) => (
        <span
          key={tag}
          className="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200"
        >
          <FiTag className="mr-1 h-3 w-3" />
          {tag}
        </span>
      ))}
    </div>
  );
};

export default function BlogPage() {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('');
  const [selectedTag, setSelectedTag] = useState('');

  const categories = useMemo(() => {
    const cats = new Set(allPosts.map(post => post.category));
    return Array.from(cats);
  }, []);

  const allTags = useMemo(() => {
    const tags = new Set<string>();
    allPosts.forEach(post => {
      post.tags?.forEach(tag => tags.add(tag));
    });
    return Array.from(tags);
  }, []);

  const filteredPosts = useMemo(() => {
    return allPosts.filter(post => {
      const matchesSearch = searchQuery === '' || 
        post.title.toLowerCase().includes(searchQuery.toLowerCase()) || 
        post.excerpt.toLowerCase().includes(searchQuery.toLowerCase());
      
      const matchesCategory = !selectedCategory || post.category === selectedCategory;
      const matchesTag = !selectedTag || post.tags?.includes(selectedTag);
      
      return matchesSearch && matchesCategory && matchesTag;
    });
  }, [searchQuery, selectedCategory, selectedTag]);

  const featuredPost = filteredPosts.find(post => post.featured) || allPosts[0];
  const recentPosts = filteredPosts.filter(post => !post.featured);

  return (
    <div className="bg-white dark:bg-gray-900 min-h-screen">
      {/* Hero Section */}
      <div className="bg-gradient-to-r from-indigo-700 to-purple-700 dark:from-indigo-900 dark:to-purple-900 text-white py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="max-w-3xl">
            <h1 className="text-4xl md:text-5xl font-bold mb-6">AI Tools Blog</h1>
            <p className="text-xl text-indigo-100">
              Stay updated with the latest trends, tutorials, and insights in the world of AI and machine learning.
            </p>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="lg:flex lg:space-x-8">
          {/* Sidebar with search and filters */}
          <div className="lg:w-1/4 mb-8 lg:mb-0">
            <div className="sticky top-4">
              <div className="bg-white dark:bg-gray-800 rounded-lg p-6 shadow">
                <h2 className="text-lg font-medium text-gray-900 dark:text-white mb-4">Search</h2>
                <div className="mb-6">
                  <BlogSearch 
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    onClear={() => setSearchQuery('')}
                  />
                </div>

                <div className="mb-6">
                  <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-4">Categories</h3>
                  <div className="space-y-2">
                    <button
                      onClick={() => setSelectedCategory('')}
                      className={`block w-full text-left px-3 py-2 rounded-md ${!selectedCategory ? 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-100' : 'text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700'}`}
                    >
                      All Categories
                    </button>
                    {categories.map((category) => (
                      <button
                        key={category}
                        onClick={() => setSelectedCategory(category)}
                        className={`block w-full text-left px-3 py-2 rounded-md ${selectedCategory === category ? 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-100' : 'text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700'}`}
                      >
                        {category}
                      </button>
                    ))}
                  </div>
                </div>

                <div>
                  <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-4">Popular Tags</h3>
                  <div className="flex flex-wrap gap-2">
                    <button
                      onClick={() => setSelectedTag('')}
                      className={`px-3 py-1 text-xs rounded-full ${!selectedTag ? 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-100' : 'bg-gray-100 text-gray-800 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600'}`}
                    >
                      All Tags
                    </button>
                    {allTags.map((tag) => (
                      <button
                        key={tag}
                        onClick={() => setSelectedTag(tag)}
                        className={`px-3 py-1 text-xs rounded-full ${selectedTag === tag ? 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-100' : 'bg-gray-100 text-gray-800 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600'}`}
                      >
                        {tag}
                      </button>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Main Content Area */}
          <div className="lg:w-3/4">
            <div className="flex justify-between items-center mb-8">
              <h2 className="text-2xl font-bold text-gray-900 dark:text-white">
                {filteredPosts.length === 0 ? 'No posts found' : 
                 filteredPosts.length === 1 ? '1 post found' : 
                 `${filteredPosts.length} posts found`}
              </h2>
              <div className="text-sm text-gray-500 dark:text-gray-400">
                Showing {Math.min(1, filteredPosts.length)}-{filteredPosts.length} of {filteredPosts.length}
              </div>
            </div>

            {/* Featured Post */}
            {featuredPost && (
              <div className="mb-16">
                <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-8">Featured Post</h2>
                <div className="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden transition-transform duration-300 hover:shadow-xl">
                  <div className="md:flex">
                    <div className="md:flex-shrink-0 md:w-1/3 relative h-64 md:h-auto">
                      <Image
                        src={featuredPost.image}
                        alt={featuredPost.title}
                        fill
                        className="object-cover"
                      />
                    </div>
                    <div className="p-8 md:w-2/3">
                      <div className="flex items-center mb-4">
                        <CategoryBadge category={featuredPost.category} />
                        <span className="mx-2 text-gray-400">â€¢</span>
                        <PostDate date={featuredPost.date} />
                      </div>
                      <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-3">
                        {featuredPost.title}
                      </h3>
                      <p className="text-gray-600 dark:text-gray-300 mb-4">
                        {featuredPost.excerpt}
                      </p>
                      <div className="flex items-center justify-between">
                        <ReadingTime minutes={featuredPost.readTime} />
                        <Link
                          href={`/blog/${featuredPost.slug}`}
                          className="inline-flex items-center text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300 font-medium"
                        >
                          Read more <FiArrowRight className="ml-1" />
                        </Link>
                      </div>
                      {featuredPost.tags && <PostTags tags={featuredPost.tags} className="mt-4" />}
                    </div>
                  </div>
                </div>
              </div>
            )}

            {/* Recent Posts */}
            {recentPosts.length > 0 && (
              <div>
                <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-8">
                  {featuredPost ? 'Latest Articles' : 'All Articles'}
                </h2>
                <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-2">
                  {recentPosts.map((post) => (
                    <div key={post.id} className="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden transition-transform duration-300 hover:shadow-xl flex flex-col h-full">
                      <div className="relative h-48">
                        <Image
                          src={post.image}
                          alt={post.title}
                          fill
                          className="object-cover"
                        />
                      </div>
                      <div className="p-6 flex flex-col flex-grow">
                        <div className="flex items-center mb-3">
                          <CategoryBadge category={post.category} />
                          <span className="mx-2 text-gray-400">â€¢</span>
                          <PostDate date={post.date} />
                        </div>
                        <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-2">
                          {post.title}
                        </h3>
                        <p className="text-gray-600 dark:text-gray-300 mb-4 line-clamp-2">
                          {post.excerpt}
                        </p>
                        <div className="mt-auto">
                          <div className="flex items-center justify-between">
                            <ReadingTime minutes={post.readTime} />
                            <Link 
                              href={`/blog/${post.slug}`}
                              className="inline-flex items-center text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300 font-medium"
                            >
                              Read more <FiArrowRight className="ml-1" />
                            </Link>
                          </div>
                          {post.tags && <PostTags tags={post.tags} className="mt-4" />}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Newsletter CTA */}
      <section className="bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-gray-800 dark:to-gray-900 py-16">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl font-extrabold text-gray-900 dark:text-white sm:text-4xl">
            Stay Updated with AI Trends
          </h2>
          <p className="mt-3 max-w-2xl mx-auto text-xl text-gray-500 dark:text-gray-300 sm:mt-4">
            Subscribe to our newsletter and never miss an update on the latest AI tools and technologies.
          </p>
          <form className="mt-8 sm:flex max-w-xl mx-auto">
            <label htmlFor="email-address" className="sr-only">Email address</label>
            <div className="flex-grow">
              <input
                id="email-address"
                name="email"
                type="email"
                autoComplete="email"
                required
                className="w-full px-5 py-3 border border-gray-300 shadow-sm placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"
                placeholder="Enter your email"
              />
            </div>
            <div className="mt-3 rounded-md shadow sm:mt-0 sm:ml-3 sm:flex-shrink-0">
              <button
                type="submit"
                className="w-full flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors"
              >
                Subscribe
              </button>
            </div>
          </form>
          <p className="mt-3 text-sm text-gray-500 dark:text-gray-400">
            We care about your data. Read our{' '}
            <Link href="/privacy" className="text-indigo-600 hover:text-indigo-500 dark:text-indigo-400 dark:hover:text-indigo-300 font-medium">
              Privacy Policy
            </Link>.
          </p>
        </div>
      </section>
    </div>
  );
}
